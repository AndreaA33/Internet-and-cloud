{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "A distributed database application with consistency and partition tolerance (CP) in mind.",
    "Resources": {
      "PublicSubnet": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": "vpc-0a1b2c3d4e5f67890",
          "CidrBlock": "10.0.1.0/24",
          "AvailabilityZone": "us-east-1a",
          "MapPublicIpOnLaunch": true
        }
      },
      "PrivateSubnet": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": "vpc-0a1b2c3d4e5f67890",
          "CidrBlock": "10.0.2.0/24",
          "AvailabilityZone": "us-east-1b"
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway"
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {
          "VpcId": "vpc-0a1b2c3d4e5f67890"
        }
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "Properties": {
          "RouteTableId": { "Ref": "PublicRouteTable" },
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": { "Ref": "InternetGateway" }
        }
      },
      "Database": {
        "Type": "AWS::RDS::DBInstance",
        "Properties": {
          "DBInstanceClass": "db.t3.micro",
          "Engine": "mysql",
          "MasterUsername": "admin",
          "MasterUserPassword": "password123",
          "AllocatedStorage": "20",
          "BackupRetentionPeriod": 7,
          "StorageType": "gp2",
          "PubliclyAccessible": false,
          "MultiAZ": true, 
          "DBSubnetGroupName": { "Ref": "DBSubnetGroup" }
        }
      },
      "ReplicaDatabase": {
        "Type": "AWS::RDS::DBInstance",
        "Properties": {
          "SourceDBInstanceIdentifier": { "Ref": "Database" },
          "DBInstanceClass": "db.t3.micro",
          "Engine": "mysql",
          "PubliclyAccessible": false,
          "DBSubnetGroupName": { "Ref": "DBSubnetGroup" },
          "MultiAZ": true
        }
      },
      "DBSubnetGroup": {
        "Type": "AWS::RDS::DBSubnetGroup",
        "Properties": {
          "DBSubnetGroupDescription": "Database subnet group for consistent and partition-tolerant RDS setup",
          "SubnetIds": [
            { "Ref": "PublicSubnet" },
            { "Ref": "PrivateSubnet" }
          ]
        }
      },
      "AutoScalingGroup": {
        "Type": "AWS::AutoScaling::AutoScalingGroup",
        "Properties": {
          "LaunchConfigurationName": { "Ref": "LaunchConfiguration" },
          "MinSize": "1",
          "MaxSize": "4",
          "VPCZoneIdentifier": [
            { "Ref": "PublicSubnet" },
            { "Ref": "PrivateSubnet" }
          ]
        }
      },
      "LaunchConfiguration": {
        "Type": "AWS::AutoScaling::LaunchConfiguration",
        "Properties": {
          "ImageId": "ami-0c55b159cbfafe1f0",
          "InstanceType": "t2.micro",
          "SecurityGroups": [{ "Ref": "InstanceSecurityGroup" }]
        }
      },
      "InstanceSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "Enable access to instances",
          "VpcId": "vpc-0a1b2c3d4e5f67890",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": 3306,
              "ToPort": 3306,
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "LoadBalancer": {
        "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "Properties": {
          "Name": "AppLoadBalancer",
          "Scheme": "internet-facing",
          "Subnets": [{ "Ref": "PublicSubnet" }]
        }
      },
      "TargetGroup": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "Name": "AppTargetGroup",
          "Port": 80,
          "Protocol": "TCP",
          "VpcId": "vpc-0a1b2c3d4e5f67890",
          "TargetType": "instance"
        }
      },
      "Listener": {
        "Type": "AWS::ElasticLoadBalancingV2::Listener",
        "Properties": {
          "DefaultActions": [
            {
              "Type": "forward",
              "TargetGroupArn": { "Ref": "TargetGroup" }
            }
          ],
          "LoadBalancerArn": { "Ref": "LoadBalancer" },
          "Port": 80,
          "Protocol": "TCP"
        }
      }
    },
    "Outputs": {
      "LoadBalancerDNS": {
        "Value": { "Fn::GetAtt": ["LoadBalancer", "DNSName"] },
        "Description": "The DNS name of the load balancer"
      },
      "DatabaseEndpoint": {
        "Value": { "Fn::GetAtt": ["Database", "Endpoint.Address"] },
        "Description": "Primary database endpoint"
      },
      "ReplicaDatabaseEndpoint": {
        "Value": { "Fn::GetAtt": ["ReplicaDatabase", "Endpoint.Address"] },
        "Description": "Replica database endpoint"
      }
    }
  }
  