{
    "Metadata": {
        "AWSToolsMetrics": {
            "IaC_Generator": "arn:aws:cloudformation:eu-west-2:715841351824:generatedTemplate/d96c4ced-19d5-40fc-aa35-b1576b2c2078"
        }
    },
    "Resources": {
        "CloudFrontOriginRequestPolicy00b689b0a853d040abbaf268738e2966ac00HZdyI": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "all"
                    },
                    "Comment": "Policy to forward all parameters in viewer requests except for the Host header",
                    "HeadersConfig": {
                        "HeaderBehavior": "allExcept",
                        "Headers": [
                            "host"
                        ]
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "all"
                    },
                    "Name": "Managed-AllViewerExceptHostHeader"
                }
            }
        },
        "EC2NetworkInterfaceAttachment00elaattach0e87fbc0fdcc1fdef00ynDyt": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0fc449876e8d68acc",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "EC2SubnetNetworkAclAssociation00aclassoc0f7f1b55bda0d181100WpiY7": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "EC2NetworkAcl00acl008f26881cab401f200X8M9n"
                },
                "SubnetId": "subnet-0c15983f5b12dbce0"
            }
        },
        "EC2Route00rtb0fce07c98d6a8df7f00doSfJ": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::Route",
            "DeletionPolicy": "Retain",
            "Properties": {
                "RouteTableId": "rtb-0fce07c98d6a8df7f",
                "DestinationCidrBlock": "10.0.0.0/16",
                "GatewayId": "local",
                "VpcEndpointId": "local"
            }
        },
        "CloudFrontOriginRequestPolicy0059781a5b390341f3afcbaf62929ccde100ybkc8": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "none"
                    },
                    "Comment": "Policy for custom origin with CORS",
                    "HeadersConfig": {
                        "HeaderBehavior": "whitelist",
                        "Headers": [
                            "origin"
                        ]
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "none"
                    },
                    "Name": "Managed-CORS-CustomOrigin"
                }
            }
        },
        "CodeDeployApplication00whiteboardwebapp00o7GwT": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CodeDeploy::Application",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ApplicationName": "whiteboard-web-app",
                "ComputePlatform": "Server"
            }
        },
        "S3Bucket00cftemplates1hchqqw69n7caeuwest2004OGmy": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PublicAccessBlockConfiguration": {
                    "RestrictPublicBuckets": true,
                    "IgnorePublicAcls": true,
                    "BlockPublicPolicy": true,
                    "BlockPublicAcls": true
                },
                "BucketName": "cf-templates-1hchqqw69n7ca-eu-west-2",
                "OwnershipControls": {
                    "Rules": [
                        {
                            "ObjectOwnership": "BucketOwnerEnforced"
                        }
                    ]
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "BucketKeyEnabled": false,
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "S3Bucket00cftemplates19l6nrtyp3ooeuwest200f8Sxk": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PublicAccessBlockConfiguration": {
                    "RestrictPublicBuckets": true,
                    "IgnorePublicAcls": true,
                    "BlockPublicPolicy": true,
                    "BlockPublicAcls": true
                },
                "BucketName": "cf-templates--19l6nrtyp3oo-eu-west-2",
                "OwnershipControls": {
                    "Rules": [
                        {
                            "ObjectOwnership": "BucketOwnerEnforced"
                        }
                    ]
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "BucketKeyEnabled": false,
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "IAMRole00AWSServiceRoleForAmazonSSM00Nga8D": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/ssm.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/AmazonSSMServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForAmazonSSM",
                "Description": "Provides access to AWS Resources managed or used by Amazon SSM.",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ssm.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "EventsEventBus00default002PNTE": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::Events::EventBus",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Tags": [],
                "Name": "default"
            }
        },
        "IAMRole00EK2role100jolmh": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "EK2-role-1",
                "Description": "Allows the cluster Kubernetes control plane to manage AWS resources on your behalf.",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "eks.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "EC2VPCDHCPOptionsAssociation00vpc0710f734c8d63e49200C0K1k": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "VpcId": "vpc-0710f734c8d63e492",
                "DhcpOptionsId": {
                    "Ref": "EC2DHCPOptions00dopt090d8a8a998debecb00uVsEV"
                }
            }
        },
        "IAMRole00AWSServiceRoleForTrustedAdvisor00Qwt3T": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/trustedadvisor.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForTrustedAdvisor",
                "Description": "Access for the AWS Trusted Advisor Service to help reduce cost, increase performance, and improve security of your AWS environment.",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "trustedadvisor.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "ElasticLoadBalancingV2ListenerRule00listenerruleapplb0f34334d5e124b9fa5899c3c278aacd7ecc4bc2c685f920f00MGwXC": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ElasticLoadBalancingV2::ListenerRule",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Actions": [
                    {
                        "Order": 1,
                        "TargetGroupArn": "arn:aws:elasticloadbalancing:eu-west-2:715841351824:targetgroup/tg/649e39b41f812cf1",
                        "Type": "forward",
                        "ForwardConfig": {
                            "TargetGroupStickinessConfig": {
                                "Enabled": false,
                                "DurationSeconds": 3600
                            },
                            "TargetGroups": [
                                {
                                    "TargetGroupArn": "arn:aws:elasticloadbalancing:eu-west-2:715841351824:targetgroup/tg/649e39b41f812cf1",
                                    "Weight": 1
                                }
                            ]
                        }
                    }
                ],
                "Priority": 2,
                "Conditions": [
                    {
                        "Values": [
                            "/ws-api/*"
                        ],
                        "Field": "path-pattern",
                        "PathPatternConfig": {
                            "Values": [
                                "/ws-api/*"
                            ]
                        }
                    }
                ]
            }
        },
        "EC2RouteTable00rtb0003c1c6282f0069500QLWT6": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::RouteTable",
            "DeletionPolicy": "Retain",
            "Properties": {
                "VpcId": "vpc-0710f734c8d63e492",
                "Tags": [
                    {
                        "Value": "Private Route Table",
                        "Key": "Name"
                    }
                ]
            }
        },
        "MemoryDBParameterGroup00defaultmemorydbvalkey7search00EfB2H": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::ParameterGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ParameterGroupName": "default.memorydb-valkey7.search",
                "Family": "memorydb_valkey7",
                "Description": "Customized default parameter group for memorydb_valkey7 with search-enabled yes"
            }
        },
        "EC2NetworkInterfaceAttachment00elaattach00dd4d5ff637f015100Rskd7": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-09a52e73438cec2b2",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "IAMRole00mainec2role00aHzyb": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSAppRunnerServicePolicyForECRAccess",
                    "arn:aws:iam::aws:policy/EC2InstanceProfileForImageBuilderECRContainerBuilds",
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
                    "arn:aws:iam::aws:policy/EC2InstanceConnect"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "main-ec2-role",
                "Description": "Allows EC2 instances to call AWS services on your behalf.",
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Resource": "arn:aws:ecr:eu-west-2:715841351824:repository/internet-and-cloud/whiteboard",
                                    "Action": [
                                        "ecr:GetAuthorizationToken",
                                        "ecr:BatchCheckLayerAvailability",
                                        "ecr:GetDownloadUrlForLayer",
                                        "ecr:BatchGetImage"
                                    ],
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "ecr-IAM-policy"
                    }
                ],
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "ec2.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "ElastiCacheSubnetGroup00redisosssubnet00VQmC3": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ElastiCache::SubnetGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "SubnetIds": [
                    "subnet-0568f622ecee0afdd",
                    "subnet-0d755356962346f65"
                ],
                "CacheSubnetGroupName": "redis-oss-subnet",
                "Description": " "
            }
        },
        "IAMRole00AWSServiceRoleForAutoScaling0013CLL": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/autoscaling.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/AutoScalingServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForAutoScaling",
                "Description": "Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "autoscaling.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "CloudFrontCachePolicy00a6bad94636c34c33aa98362c74a7fb1300Xd2WQ": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Default Amplify cache policy without cookies",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "all"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "Authorization",
                                "Accept",
                                "CloudFront-Viewer-Country",
                                "Host"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 0,
                    "Name": "Managed-Amplify-DefaultNoCookies"
                }
            }
        },
        "IAMRole00AWSServiceRoleForSupport008cyyg": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/support.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForSupport",
                "Description": "Enables resource access for AWS to provide billing, administrative and support services",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "support.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "EC2SecurityGroup00sg08f4aa96310ea34f700AkHkF": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SecurityGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "GroupDescription": "default VPC security group",
                "GroupName": "default",
                "VpcId": "vpc-0710f734c8d63e492",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "-1",
                        "FromPort": -1,
                        "SourceSecurityGroupId": "sg-08f4aa96310ea34f7",
                        "ToPort": -1,
                        "SourceSecurityGroupOwnerId": "715841351824"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "-1",
                        "FromPort": -1,
                        "ToPort": -1
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 6379,
                        "ToPort": 6379
                    }
                ]
            }
        },
        "EC2SubnetRouteTableAssociation00rtbassoc03a8e5b9aa48b786400ri7DC": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "RouteTableId": {
                    "Ref": "EC2RouteTable00rtb0003c1c6282f0069500QLWT6"
                },
                "SubnetId": "subnet-0ecc5d9168672b721"
            }
        },
        "CloudFrontOriginRequestPolicy0088a5eaf42fd44709b370b4c650ea3fcf00hBnnY": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "none"
                    },
                    "Comment": "Policy for S3 origin with CORS",
                    "HeadersConfig": {
                        "HeaderBehavior": "whitelist",
                        "Headers": [
                            "origin",
                            "access-control-request-headers",
                            "access-control-request-method"
                        ]
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "none"
                    },
                    "Name": "Managed-CORS-S3Origin"
                }
            }
        },
        "EC2NetworkInterfaceAttachment00elaattach0841559e96ea8d4c100XU4Ak": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-058f4cb52781af1ac",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "EC2NetworkInterface00eni0e6ee478aab435a0800jpGqU": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "VPC Endpoint Interface vpce-0687eaac4eb6b6f20",
                "PrivateIpAddress": "10.0.3.144",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.3.144",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-08f4aa96310ea34f7"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0d755356962346f65",
                "SourceDestCheck": true,
                "InterfaceType": "vpc_endpoint",
                "Tags": []
            }
        },
        "CloudFrontCachePolicy002e54312d136d493c8eb9b001f22f67d200dduaD": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Policy for Amplify Origin",
                    "MinTTL": 2,
                    "MaxTTL": 600,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "all"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "Authorization",
                                "CloudFront-Viewer-Country",
                                "Host"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "all"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 2,
                    "Name": "Managed-Amplify"
                }
            }
        },
        "ECRRepository00intandcloudwhiteboard100WO6oT": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ECR::Repository",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ImageScanningConfiguration": {
                    "ScanOnPush": false
                },
                "RepositoryName": "int-and-cloud/whiteboard-1",
                "EncryptionConfiguration": {
                    "EncryptionType": "AES256"
                },
                "Tags": [],
                "ImageTagMutability": "MUTABLE"
            }
        },
        "CloudFrontOriginRequestPolicy00775133bc15f249f9abeaafb2e0bf67d200vF4gr": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "all"
                    },
                    "Comment": "Policy for Elemental MediaTailor Origin",
                    "HeadersConfig": {
                        "HeaderBehavior": "whitelist",
                        "Headers": [
                            "origin",
                            "access-control-request-headers",
                            "x-forwarded-for",
                            "access-control-request-method",
                            "user-agent"
                        ]
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "none"
                    },
                    "Name": "Managed-Elemental-MediaTailor-PersonalizedManifests"
                }
            }
        },
        "IAMGroup00IAC00Wiqit": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Group",
            "DeletionPolicy": "Retain",
            "Properties": {
                "GroupName": "IAC",
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AdministratorAccess-Amplify",
                    "arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk",
                    "arn:aws:iam::aws:policy/AdministratorAccess"
                ]
            }
        },
        "XRayGroup00groupDefault00z3Xqs": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::XRay::Group",
            "DeletionPolicy": "Retain",
            "Properties": {
                "GroupName": "Default",
                "InsightsConfiguration": {
                    "InsightsEnabled": false,
                    "NotificationsEnabled": false
                },
                "Tags": []
            }
        },
        "CloudTrailTrail00managementevents00cW97s": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudTrail::Trail",
            "DeletionPolicy": "Retain",
            "Properties": {
                "IncludeGlobalServiceEvents": true,
                "EventSelectors": [],
                "IsMultiRegionTrail": true,
                "AdvancedEventSelectors": [
                    {
                        "FieldSelectors": [
                            {
                                "Field": "eventCategory",
                                "Equals": [
                                    "Management"
                                ]
                            }
                        ],
                        "Name": "Management events selector"
                    }
                ],
                "S3BucketName": {
                    "Ref": "S3Bucket00awscloudtraillogs71584135182464db1dcb00SYlEQ"
                },
                "TrailName": "management-events",
                "EnableLogFileValidation": false,
                "Tags": [],
                "IsLogging": true,
                "IsOrganizationTrail": false,
                "InsightSelectors": []
            }
        },
        "EC2NetworkInterface00eni058f4cb52781af1ac00pyYnh": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "VPC Endpoint Interface vpce-0ef382bcdba523e9d",
                "PrivateIpAddress": "10.0.4.138",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.4.138",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0d2afaf25db37aa1c"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0c15983f5b12dbce0",
                "SourceDestCheck": true,
                "InterfaceType": "vpc_endpoint",
                "Tags": []
            }
        },
        "EC2NetworkInterfaceAttachment00eniattach0a965cd070892087800ljs0e": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0d55010433fc7a993",
                "InstanceId": "i-0eb27ae9808d1ff5e",
                "DeviceIndex": "0",
                "DeleteOnTermination": true
            }
        },
        "EC2SubnetNetworkAclAssociation00aclassoc02cd6598e247dee0f00hjLah": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "EC2NetworkAcl00acl008f26881cab401f200X8M9n"
                },
                "SubnetId": "subnet-0568f622ecee0afdd"
            }
        },
        "EC2NetworkInterface00eni0fc449876e8d68acc00n3cZx": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "VPC Endpoint Interface vpce-0a2367185a4c6b172",
                "PrivateIpAddress": "10.0.2.254",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.2.254",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0d2afaf25db37aa1c"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0ecc5d9168672b721",
                "SourceDestCheck": true,
                "InterfaceType": "vpc_endpoint",
                "Tags": []
            }
        },
        "EC2NetworkInterface00eni0709d8dff8cfc34e6004V59k": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "ElastiCache redis-elasticache-002",
                "PrivateIpAddress": "10.0.3.166",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.3.166",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0aa4d492d9dda63dc"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0d755356962346f65",
                "SourceDestCheck": true,
                "InterfaceType": "interface",
                "Tags": []
            }
        },
        "ElasticLoadBalancingV2Listener00listenerapplb0f34334d5e124b9fa5899c3c278aacd700sM9bG": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ElasticLoadBalancingV2::Listener",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ListenerAttributes": [
                    {
                        "Value": "true",
                        "Key": "routing.http.response.server.enabled"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.access_control_allow_headers.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.x_frame_options.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.access_control_allow_methods.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.access_control_allow_origin.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.access_control_allow_credentials.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.x_content_type_options.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.content_security_policy.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.access_control_expose_headers.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.strict_transport_security.header_value"
                    },
                    {
                        "Value": "",
                        "Key": "routing.http.response.access_control_max_age.header_value"
                    }
                ],
                "Protocol": "HTTP",
                "LoadBalancerArn": "arn:aws:elasticloadbalancing:eu-west-2:715841351824:loadbalancer/app/lb/0f34334d5e124b9f",
                "DefaultActions": [
                    {
                        "Order": 1,
                        "TargetGroupArn": "arn:aws:elasticloadbalancing:eu-west-2:715841351824:targetgroup/tg/649e39b41f812cf1",
                        "Type": "forward",
                        "ForwardConfig": {
                            "TargetGroupStickinessConfig": {
                                "Enabled": false,
                                "DurationSeconds": 3600
                            },
                            "TargetGroups": [
                                {
                                    "TargetGroupArn": "arn:aws:elasticloadbalancing:eu-west-2:715841351824:targetgroup/tg/649e39b41f812cf1",
                                    "Weight": 1
                                }
                            ]
                        }
                    }
                ],
                "Port": 80
            }
        },
        "IAMInstanceProfile00mainec2role00WXYyn": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::InstanceProfile",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "IAMRole00mainec2role00aHzyb"
                    }
                ],
                "InstanceProfileName": {
                    "Ref": "IAMRole00mainec2role00aHzyb"
                }
            }
        },
        "EC2NetworkInterface00eni0c1171a47a1991be600CHBDQ": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "ELB app/lb/0f34334d5e124b9f",
                "PrivateIpAddress": "10.0.3.155",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.3.155",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0d450967a4526f8c1"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0d755356962346f65",
                "SourceDestCheck": true,
                "InterfaceType": "interface",
                "Tags": []
            }
        },
        "S3Bucket00lbs3bucket12300mr56I": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PublicAccessBlockConfiguration": {
                    "RestrictPublicBuckets": true,
                    "IgnorePublicAcls": true,
                    "BlockPublicPolicy": true,
                    "BlockPublicAcls": true
                },
                "BucketName": "lb-s3-bucket-123",
                "OwnershipControls": {
                    "Rules": [
                        {
                            "ObjectOwnership": "BucketOwnerEnforced"
                        }
                    ]
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "BucketKeyEnabled": false,
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "EC2NetworkInterfaceAttachment00eniattach02a2525e06e6a1ffa006Tfl7": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-071aacfaa5878efe4",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "MemoryDBParameterGroup00defaultmemorydbredis700qOaVQ": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::ParameterGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ParameterGroupName": "default.memorydb-redis7",
                "Family": "memorydb_redis7",
                "Description": "Default parameter group for memorydb_redis7"
            }
        },
        "EC2VPCEndpoint00vpce0a2367185a4c6b17200pZf7c": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::VPCEndpoint",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PrivateDnsEnabled": true,
                "VpcId": "vpc-0710f734c8d63e492",
                "RouteTableIds": [],
                "ServiceName": "com.amazonaws.eu-west-2.ecr.api",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Resource": "*",
                            "Action": "*",
                            "Effect": "Allow",
                            "Principal": "*"
                        }
                    ]
                },
                "VpcEndpointType": "Interface",
                "SecurityGroupIds": [
                    "sg-0d2afaf25db37aa1c"
                ],
                "SubnetIds": [
                    "subnet-0c15983f5b12dbce0",
                    "subnet-0ecc5d9168672b721"
                ]
            }
        },
        "ECRRepository00internetandcloudwhiteboard00rUObk": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ECR::Repository",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ImageScanningConfiguration": {
                    "ScanOnPush": false
                },
                "RepositoryName": "internet-and-cloud/whiteboard",
                "EncryptionConfiguration": {
                    "EncryptionType": "AES256"
                },
                "Tags": [],
                "ImageTagMutability": "MUTABLE"
            }
        },
        "CloudFrontCachePolicy007e5fad67ee984ad0b05a394999eefc1a00sHdrI": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Amplify cache policy for static content",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "Authorization",
                                "Host"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 0,
                    "Name": "Managed-Amplify-StaticContent"
                }
            }
        },
        "IAMRole00AWSServiceRoleForElastiCache00A17oD": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/elasticache.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/ElastiCacheServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForElastiCache",
                "Description": "This policy allows ElastiCache to manage AWS resources on your behalf as necessary for managing your cache.",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "elasticache.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "EC2SubnetNetworkAclAssociation00aclassoc0a9f2fab0bc9d9a2400UuPmi": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "EC2NetworkAcl00acl008f26881cab401f200X8M9n"
                },
                "SubnetId": "subnet-0ecc5d9168672b721"
            }
        },
        "CloudFrontCachePolicy004cc15a8ad71548a482b8cc0b614638fe00FrRmW": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Policy for origins that return Cache-Control headers and serve different content based on values present in the query string.",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "all"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "x-method-override",
                                "origin",
                                "host",
                                "x-http-method",
                                "x-http-method-override"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "all"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 0,
                    "Name": "UseOriginCacheControlHeaders-QueryStrings"
                }
            }
        },
        "MemoryDBParameterGroup00defaultmemorydbvalkey700f4PYc": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::ParameterGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ParameterGroupName": "default.memorydb-valkey7",
                "Family": "memorydb_valkey7",
                "Description": "Default parameter group for memorydb_valkey7"
            }
        },
        "MemoryDBACL00openaccess00EJln1": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::ACL",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ACLName": "open-access",
                "Tags": [],
                "UserNames": [
                    "default"
                ]
            }
        },
        "EC2VPCEndpoint00vpce0ef382bcdba523e9d00f2fIw": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::VPCEndpoint",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PrivateDnsEnabled": true,
                "VpcId": "vpc-0710f734c8d63e492",
                "RouteTableIds": [],
                "ServiceName": "com.amazonaws.eu-west-2.ecr.dkr",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Resource": "*",
                            "Action": "*",
                            "Effect": "Allow",
                            "Principal": "*"
                        }
                    ]
                },
                "VpcEndpointType": "Interface",
                "SecurityGroupIds": [
                    "sg-0d2afaf25db37aa1c"
                ],
                "SubnetIds": [
                    "subnet-0c15983f5b12dbce0",
                    "subnet-0ecc5d9168672b721"
                ]
            }
        },
        "S3BucketPolicy00awscloudtraillogs71584135182464db1dcb00nZHwj": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::S3::BucketPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Bucket": {
                    "Ref": "S3Bucket00awscloudtraillogs71584135182464db1dcb00SYlEQ"
                },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Condition": {
                                "StringEquals": {
                                    "AWS:SourceArn": "arn:aws:cloudtrail:eu-west-2:715841351824:trail/management-events"
                                }
                            },
                            "Resource": "arn:aws:s3:::aws-cloudtrail-logs-715841351824-64db1dcb",
                            "Action": "s3:GetBucketAcl",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Sid": "AWSCloudTrailAclCheck20150319-ef447921-7b3f-4084-b92c-5ed18f67acc0"
                        },
                        {
                            "Condition": {
                                "StringEquals": {
                                    "AWS:SourceArn": "arn:aws:cloudtrail:eu-west-2:715841351824:trail/management-events",
                                    "s3:x-amz-acl": "bucket-owner-full-control"
                                }
                            },
                            "Resource": "arn:aws:s3:::aws-cloudtrail-logs-715841351824-64db1dcb/AWSLogs/715841351824/*",
                            "Action": "s3:PutObject",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "cloudtrail.amazonaws.com"
                            },
                            "Sid": "AWSCloudTrailWrite20150319-3204ba61-ec43-45c5-90ff-8f4834ceafd8"
                        }
                    ]
                }
            }
        },
        "EC2SubnetRouteTableAssociation00rtbassoc0a66264d26d4b42a100aSvjd": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "RouteTableId": {
                    "Ref": "EC2RouteTable00rtb0003c1c6282f0069500QLWT6"
                },
                "SubnetId": "subnet-0c15983f5b12dbce0"
            }
        },
        "CloudFrontCachePolicy000862726205a94f769dedb50ca2e3a84f000IRxc": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Policy for Elemental MediaPackage Origin",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStrings": [
                                "aws.manifestfilter",
                                "start",
                                "end",
                                "m"
                            ],
                            "QueryStringBehavior": "whitelist"
                        },
                        "EnableAcceptEncodingBrotli": false,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "origin"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 86400,
                    "Name": "Managed-Elemental-MediaPackage"
                }
            }
        },
        "IAMRole00KD00xicS9": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AdministratorAccess-Amplify",
                    "arn:aws:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk",
                    "arn:aws:iam::aws:policy/AdministratorAccess"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "KD",
                "Description": "",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Condition": {},
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "arn:aws:iam::794038225196:root"
                            }
                        }
                    ]
                }
            }
        },
        "EC2Route00rtb0003c1c6282f0069500Ofm3R": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::Route",
            "DeletionPolicy": "Retain",
            "Properties": {
                "RouteTableId": {
                    "Ref": "EC2RouteTable00rtb0003c1c6282f0069500QLWT6"
                },
                "DestinationPrefixListId": "pl-7ca54015",
                "GatewayId": "vpce-0b057de2ad756e22a",
                "VpcEndpointId": "vpce-0b057de2ad756e22a"
            }
        },
        "CloudFrontCachePolicy00b2884449e4de46a7ac3670bc7f1ddd6d00hrf5P": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Default policy when compression is disabled",
                    "MinTTL": 1,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        },
                        "EnableAcceptEncodingBrotli": false,
                        "HeadersConfig": {
                            "HeaderBehavior": "none"
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": false
                    },
                    "DefaultTTL": 86400,
                    "Name": "Managed-CachingOptimizedForUncompressedObjects"
                }
            }
        },
        "ElastiCacheSubnetGroup00rediselasticachesubnetgroup00nhhas": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ElastiCache::SubnetGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "SubnetIds": [
                    "subnet-0568f622ecee0afdd",
                    "subnet-0c15983f5b12dbce0",
                    "subnet-0ecc5d9168672b721",
                    "subnet-0d755356962346f65"
                ],
                "CacheSubnetGroupName": "redis-elasticache-subnet-group",
                "Description": " "
            }
        },
        "EC2SecurityGroup00sg0aa4d492d9dda63dc00B31NR": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SecurityGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "GroupDescription": "SG for redis",
                "GroupName": "redis-security-group",
                "VpcId": "vpc-0710f734c8d63e492",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 6379,
                        "ToPort": 6379
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "-1",
                        "FromPort": -1,
                        "ToPort": -1
                    }
                ],
                "Tags": [
                    {
                        "Value": "RedisSG",
                        "Key": "Name"
                    }
                ]
            }
        },
        "EC2KeyPair00newkeypair00TaY10": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::KeyPair",
            "DeletionPolicy": "Retain",
            "Properties": {
                "KeyName": "new-key-pair",
                "KeyType": "rsa",
                "PublicKeyMaterial": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC5Neqc0hL2GhI6F7sJq8V8EwNF7fxP3maHdoNT/X2QFbXxD8IZLiYcqGf8RrjahPaexQI8Lt23aiMekNeUx30xyuLCJP+cx2QDV4OEgUmoBWxtEuMHkm3gBKXGRLNxEA19VMDE9cSbUiMf2w4r5ft7XQcqfIMXsJRRNb1qlERVYWMld8aD+J0M1KEau515i5js5B9UDS8DjSnFK3TZ4l6gO8+VtZmhYMtT+y6lFBwCdkLWuhKnOUmp2a16t2sk++XiVCwL4nHzYdOPUtse1lJaHh5Zx0fRDJBYfxQZkVOWmlqEt825O8bYOFBg27oPWzxOe57IJBqus6OqaBfdIlex new-key-pair\n",
                "Tags": []
            }
        },
        "CloudFrontCachePolicy00658327eaf89d4faba63d7e88639e58f600rUhS0": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Policy with caching enabled. Supports Gzip and Brotli compression.",
                    "MinTTL": 1,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "none"
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 86400,
                    "Name": "Managed-CachingOptimized"
                }
            }
        },
        "EC2VPCEndpoint00vpce0687eaac4eb6b6f20009LUTi": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::VPCEndpoint",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PrivateDnsEnabled": true,
                "VpcId": "vpc-0710f734c8d63e492",
                "RouteTableIds": [],
                "ServiceName": "com.amazonaws.eu-west-2.elasticache",
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Resource": "*",
                            "Action": "*",
                            "Effect": "Allow",
                            "Principal": "*"
                        }
                    ]
                },
                "VpcEndpointType": "Interface",
                "SecurityGroupIds": [
                    "sg-08f4aa96310ea34f7"
                ],
                "SubnetIds": [
                    "subnet-0568f622ecee0afdd",
                    "subnet-0d755356962346f65"
                ]
            }
        },
        "MemoryDBParameterGroup00defaultmemorydbredis6005XFOy": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::ParameterGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ParameterGroupName": "default.memorydb-redis6",
                "Family": "memorydb_redis6",
                "Description": "Default parameter group for memorydb_redis6"
            }
        },
        "EC2VPCEndpoint00vpce0b057de2ad756e22a002PvFj": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::VPCEndpoint",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PrivateDnsEnabled": false,
                "VpcId": "vpc-0710f734c8d63e492",
                "RouteTableIds": [
                    {
                        "Ref": "EC2RouteTable00rtb0003c1c6282f0069500QLWT6"
                    }
                ],
                "ServiceName": "com.amazonaws.eu-west-2.s3",
                "PolicyDocument": {
                    "Version": "2008-10-17",
                    "Statement": [
                        {
                            "Resource": "*",
                            "Action": "*",
                            "Effect": "Allow",
                            "Principal": "*"
                        }
                    ]
                },
                "VpcEndpointType": "Gateway",
                "SecurityGroupIds": [],
                "SubnetIds": []
            }
        },
        "EC2NetworkInterface00eni0279e6bd527b0254b00cK9as": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "VPC Endpoint Interface vpce-0a2367185a4c6b172",
                "PrivateIpAddress": "10.0.4.244",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.4.244",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0d2afaf25db37aa1c"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0c15983f5b12dbce0",
                "SourceDestCheck": true,
                "InterfaceType": "vpc_endpoint",
                "Tags": []
            }
        },
        "IAMRole00AWSServiceRoleForElasticLoadBalancing00TUzzV": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/elasticloadbalancing.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForElasticLoadBalancing",
                "Description": "Allows ELB to call AWS services on your behalf.",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "elasticloadbalancing.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "EC2SecurityGroup00sg0d2afaf25db37aa1c00IbW9u": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SecurityGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "GroupDescription": "vpc endpoint security group",
                "GroupName": "VPC-endpoint-security-group",
                "VpcId": "vpc-0710f734c8d63e492",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 443,
                        "ToPort": 443
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "-1",
                        "FromPort": -1,
                        "ToPort": -1
                    }
                ]
            }
        },
        "EC2NetworkInterfaceAttachment00elaattach0a60a3b881d4d777a00g5M3l": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0ffb9b8055e32ab19",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "CloudFrontOriginRequestPolicy0033f36d7ef39646d990e052428a34d9dc00JTGk3": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "all"
                    },
                    "Comment": "Policy to forward all parameters in viewer requests and all CloudFront headers as of June 2022",
                    "HeadersConfig": {
                        "HeaderBehavior": "allViewerAndWhitelistCloudFront",
                        "Headers": [
                            "CloudFront-Viewer-Time-Zone",
                            "CloudFront-Viewer-Address",
                            "CloudFront-Viewer-Country",
                            "CloudFront-Is-IOS-Viewer",
                            "CloudFront-Is-Tablet-Viewer",
                            "CloudFront-Forwarded-Proto",
                            "CloudFront-Viewer-Country-Name",
                            "CloudFront-Is-Mobile-Viewer",
                            "CloudFront-Is-SmartTV-Viewer",
                            "CloudFront-Viewer-Country-Region",
                            "CloudFront-Is-Android-Viewer",
                            "CloudFront-Viewer-Country-Region-Name",
                            "CloudFront-Viewer-City",
                            "CloudFront-Viewer-Latitude",
                            "CloudFront-Viewer-Longitude",
                            "CloudFront-Viewer-Http-Version",
                            "CloudFront-Viewer-Postal-Code",
                            "CloudFront-Viewer-ASN",
                            "CloudFront-Is-Desktop-Viewer",
                            "CloudFront-Viewer-Metro-Code",
                            "CloudFront-Viewer-TLS"
                        ]
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "all"
                    },
                    "Name": "Managed-AllViewerAndCloudFrontHeaders-2022-06"
                }
            }
        },
        "CloudFrontOriginRequestPolicy00acba4595bd2849b8b9fe13317c0390fa00Q4U4K": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "none"
                    },
                    "Comment": "Policy to forward user-agent and referer headers to origin",
                    "HeadersConfig": {
                        "HeaderBehavior": "whitelist",
                        "Headers": [
                            "referer",
                            "user-agent"
                        ]
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "none"
                    },
                    "Name": "Managed-UserAgentRefererHeaders"
                }
            }
        },
        "IAMRole00AWSServiceRoleForAmazonEKS00KoFpc": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::Role",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/aws-service-role/eks.amazonaws.com/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/aws-service-role/AmazonEKSServiceRolePolicy"
                ],
                "MaxSessionDuration": 3600,
                "RoleName": "AWSServiceRoleForAmazonEKS",
                "Description": "Allows Amazon EKS to call AWS services on your behalf.",
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "eks.amazonaws.com"
                            }
                        }
                    ]
                }
            }
        },
        "EC2NetworkAcl00acl008f26881cab401f200X8M9n": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkAcl",
            "DeletionPolicy": "Retain",
            "Properties": {
                "VpcId": "vpc-0710f734c8d63e492",
                "Tags": []
            }
        },
        "EC2NetworkInterface00eni0ffb9b8055e32ab1900cmYv0": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "VPC Endpoint Interface vpce-0ef382bcdba523e9d",
                "PrivateIpAddress": "10.0.2.127",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.2.127",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0d2afaf25db37aa1c"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0ecc5d9168672b721",
                "SourceDestCheck": true,
                "InterfaceType": "vpc_endpoint",
                "Tags": []
            }
        },
        "IAMUser00KD00DkcJG": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::User",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/",
                "UserName": "KD",
                "Groups": [
                    {
                        "Ref": "IAMGroup00IAC00Wiqit"
                    }
                ],
                "Tags": [
                    {
                        "Value": "KD",
                        "Key": "AKIA2NK3YGCIMYOS2L47"
                    }
                ]
            }
        },
        "CloudFrontCachePolicy001c6db51aa33f469a8245dae26771f53000gxKMo": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Amplify cache policy for image optimization",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "all"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "Authorization",
                                "Accept",
                                "Host"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 0,
                    "Name": "Managed-Amplify-ImageOptimization"
                }
            }
        },
        "EC2NetworkInterfaceAttachment00eniattach06414dead5d4bcf6c00dAULt": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0c1171a47a1991be6",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "EC2DHCPOptions00dopt090d8a8a998debecb00uVsEV": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::DHCPOptions",
            "DeletionPolicy": "Retain",
            "Properties": {
                "DomainName": "eu-west-2.compute.internal",
                "DomainNameServers": [
                    "AmazonProvidedDNS"
                ],
                "Tags": []
            }
        },
        "Route53ResolverResolverRuleAssociation00rslvrautodefinedassocvpc0710f734c8d63e492internetresolver00O2yPW": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::Route53Resolver::ResolverRuleAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "VPCId": "vpc-0710f734c8d63e492",
                "ResolverRuleId": "rslvr-autodefined-rr-internet-resolver",
                "Name": "System Rule Association"
            }
        },
        "EC2SubnetNetworkAclAssociation00aclassoc090e7a203fb67c63800ktnno": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "EC2NetworkAcl00acl008f26881cab401f200X8M9n"
                },
                "SubnetId": "subnet-0d755356962346f65"
            }
        },
        "CloudFrontOriginRequestPolicy00216adef65c7f47e4b9895492eafa07d300n2g2D": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::OriginRequestPolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "OriginRequestPolicyConfig": {
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "all"
                    },
                    "Comment": "Policy to forward all parameters in viewer requests",
                    "HeadersConfig": {
                        "HeaderBehavior": "allViewer"
                    },
                    "CookiesConfig": {
                        "CookieBehavior": "all"
                    },
                    "Name": "Managed-AllViewer"
                }
            }
        },
        "ElastiCacheUser00default00ckg3u": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ElastiCache::User",
            "DeletionPolicy": "Retain",
            "Properties": {
                "UserName": "default",
                "UserId": "default",
                "Engine": "redis",
                "Tags": []
            }
        },
        "MemoryDBParameterGroup00defaultmemorydbredis7search00TGUCh": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::ParameterGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "ParameterGroupName": "default.memorydb-redis7.search",
                "Family": "memorydb_redis7",
                "Description": "Customized default parameter group for memorydb_redis7 with search-enabled yes"
            }
        },
        "EC2NetworkInterface00eni0d55010433fc7a99300ixGuo": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "",
                "PrivateIpAddress": "10.0.1.15",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.1.15",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0d04b497931b57ad8"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0568f622ecee0afdd",
                "SourceDestCheck": true,
                "InterfaceType": "interface",
                "Tags": []
            }
        },
        "EC2NetworkInterface00eni09a52e73438cec2b200zdQiv": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "VPC Endpoint Interface vpce-0687eaac4eb6b6f20",
                "PrivateIpAddress": "10.0.1.61",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.1.61",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-08f4aa96310ea34f7"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0568f622ecee0afdd",
                "SourceDestCheck": true,
                "InterfaceType": "vpc_endpoint",
                "Tags": []
            }
        },
        "IAMUser00whiteboardappadmin00lK0VK": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::IAM::User",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Path": "/",
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess"
                ],
                "UserName": "whiteboard-app-admin"
            }
        },
        "EC2Volume00vol06ff9d2a4ea67249400s5iTU": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::Volume",
            "DeletionPolicy": "Retain",
            "Properties": {
                "MultiAttachEnabled": false,
                "SnapshotId": "snap-0498f3d74ede8ee2e",
                "VolumeType": "gp3",
                "Encrypted": false,
                "Size": 8,
                "AutoEnableIO": true,
                "AvailabilityZone": "eu-west-2a",
                "Throughput": 125,
                "Iops": 3000,
                "Tags": []
            }
        },
        "EC2NetworkInterfaceAttachment00elaattach0fd3cdef1bbb28a0a003VKaQ": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0e6ee478aab435a08",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "EC2VolumeAttachment00vol06ff9d2a4ea67249400IW0f4": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::VolumeAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "InstanceId": "i-0eb27ae9808d1ff5e",
                "VolumeId": "vol-06ff9d2a4ea672494",
                "Device": "/dev/xvda"
            }
        },
        "S3Bucket00cftemplates1hchqqw69n7causeast100k5FfF": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PublicAccessBlockConfiguration": {
                    "RestrictPublicBuckets": true,
                    "IgnorePublicAcls": true,
                    "BlockPublicPolicy": true,
                    "BlockPublicAcls": true
                },
                "BucketName": "cf-templates-1hchqqw69n7ca-us-east-1",
                "OwnershipControls": {
                    "Rules": [
                        {
                            "ObjectOwnership": "BucketOwnerEnforced"
                        }
                    ]
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "BucketKeyEnabled": false,
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "AthenaWorkGroup00primary003anEa": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::Athena::WorkGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "WorkGroupConfiguration": {
                    "RequesterPaysEnabled": false,
                    "EnforceWorkGroupConfiguration": false,
                    "EngineVersion": {
                        "SelectedEngineVersion": "AUTO"
                    },
                    "PublishCloudWatchMetricsEnabled": false,
                    "ResultConfiguration": {}
                },
                "State": "ENABLED",
                "Tags": [],
                "Name": "primary"
            }
        },
        "EC2NetworkInterface00eni071aacfaa5878efe400hLnPX": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterface",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "ElastiCache redis-elasticache-001",
                "PrivateIpAddress": "10.0.1.178",
                "PrivateIpAddresses": [
                    {
                        "PrivateIpAddress": "10.0.1.178",
                        "Primary": true
                    }
                ],
                "SecondaryPrivateIpAddressCount": 0,
                "Ipv6PrefixCount": 0,
                "Ipv4Prefixes": [],
                "Ipv4PrefixCount": 0,
                "GroupSet": [
                    "sg-0aa4d492d9dda63dc"
                ],
                "Ipv6Prefixes": [],
                "SubnetId": "subnet-0568f622ecee0afdd",
                "SourceDestCheck": true,
                "InterfaceType": "interface",
                "Tags": []
            }
        },
        "EC2SecurityGroup00sg0d04b497931b57ad800UyclB": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::SecurityGroup",
            "DeletionPolicy": "Retain",
            "Properties": {
                "GroupDescription": "launch-wizard-1 created 2024-12-04T12:41:59.212Z",
                "GroupName": "SHH-security-group",
                "VpcId": "vpc-0710f734c8d63e492",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 22,
                        "ToPort": 22
                    }
                ],
                "SecurityGroupEgress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "-1",
                        "FromPort": -1,
                        "ToPort": -1
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "IpProtocol": "tcp",
                        "FromPort": 6379,
                        "ToPort": 6379
                    }
                ],
                "Tags": [
                    {
                        "Value": "sshSG",
                        "Key": "Name"
                    }
                ]
            }
        },
        "ResourceGroupsGroup00AppManagerCFNmainstack00AfTgF": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::ResourceGroups::Group",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Description": "Auto-generated by AWS Systems Manager Application Manager for CloudFormation resource main-stack",
                "Tags": [],
                "ResourceQuery": {
                    "Query": {
                        "ResourceTypeFilters": [
                            "AWS::AllSupported"
                        ],
                        "StackIdentifier": "arn:aws:cloudformation:eu-west-2:715841351824:stack/main-stack/3eae3620-afe9-11ef-8d3f-02ccee4c9eb5"
                    },
                    "Type": "CLOUDFORMATION_STACK_1_0"
                },
                "Name": "AppManager-CFN-main-stack"
            }
        },
        "S3Bucket00awscloudtraillogs71584135182464db1dcb00SYlEQ": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::S3::Bucket",
            "DeletionPolicy": "Retain",
            "Properties": {
                "PublicAccessBlockConfiguration": {
                    "RestrictPublicBuckets": true,
                    "IgnorePublicAcls": true,
                    "BlockPublicPolicy": true,
                    "BlockPublicAcls": true
                },
                "BucketName": "aws-cloudtrail-logs-715841351824-64db1dcb",
                "OwnershipControls": {
                    "Rules": [
                        {
                            "ObjectOwnership": "BucketOwnerEnforced"
                        }
                    ]
                },
                "BucketEncryption": {
                    "ServerSideEncryptionConfiguration": [
                        {
                            "BucketKeyEnabled": false,
                            "ServerSideEncryptionByDefault": {
                                "SSEAlgorithm": "AES256"
                            }
                        }
                    ]
                }
            }
        },
        "CloudFrontCachePolicy004d1d2f1d3a7149ad9e087ea5d843a55600KeuiW": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Default Amplify cache policy",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "all"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "Authorization",
                                "Accept",
                                "CloudFront-Viewer-Country",
                                "Host"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "all"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 0,
                    "Name": "Managed-Amplify-Default"
                }
            }
        },
        "EC2NetworkInterfaceAttachment00elaattach0f67c9993a57eb78d00G18Nc": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0279e6bd527b0254b",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "EC2Instance00i0eb27ae9808d1ff5e009PlLz": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::Instance",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Tenancy": "default",
                "SecurityGroups": [
                    "SHH-security-group"
                ],
                "PrivateIpAddress": "10.0.1.15",
                "InstanceInitiatedShutdownBehavior": "stop",
                "CpuOptions": {
                    "ThreadsPerCore": 1,
                    "CoreCount": 1
                },
                "BlockDeviceMappings": [
                    {
                        "Ebs": {
                            "SnapshotId": "snap-0498f3d74ede8ee2e",
                            "VolumeType": "gp3",
                            "Iops": 3000,
                            "VolumeSize": 8,
                            "Encrypted": false,
                            "DeleteOnTermination": true
                        },
                        "DeviceName": "/dev/xvda"
                    }
                ],
                "AvailabilityZone": "eu-west-2a",
                "PrivateDnsNameOptions": {
                    "EnableResourceNameDnsARecord": false,
                    "HostnameType": "ip-name",
                    "EnableResourceNameDnsAAAARecord": false
                },
                "SubnetId": "subnet-0568f622ecee0afdd",
                "SecurityGroupIds": [
                    "sg-0d04b497931b57ad8"
                ],
                "EbsOptimized": false,
                "DisableApiTermination": false,
                "KeyName": "new-key-pair",
                "SourceDestCheck": true,
                "Volumes": [
                    {
                        "VolumeId": "vol-06ff9d2a4ea672494",
                        "Device": "/dev/xvda"
                    }
                ],
                "PlacementGroupName": "",
                "VpcId": "vpc-0710f734c8d63e492",
                "State": {
                    "Code": "80",
                    "Name": "stopped"
                },
                "NetworkInterfaces": [
                    {
                        "PrivateIpAddresses": [
                            {
                                "PrivateIpAddress": "10.0.1.15",
                                "Primary": true
                            }
                        ],
                        "SecondaryPrivateIpAddressCount": 0,
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "EC2SecurityGroup00sg0d04b497931b57ad800UyclB"
                            }
                        ],
                        "Ipv6Addresses": [],
                        "SubnetId": "subnet-0568f622ecee0afdd",
                        "AssociatePublicIpAddress": false,
                        "NetworkInterfaceId": {
                            "Ref": "EC2NetworkInterface00eni0d55010433fc7a99300ixGuo"
                        },
                        "DeleteOnTermination": true
                    }
                ],
                "ImageId": "ami-0c76bd4bd302b30ec",
                "InstanceType": "t2.micro",
                "Monitoring": false,
                "Tags": [
                    {
                        "Value": "SSH-testing",
                        "Key": "Name"
                    }
                ],
                "CreditSpecification": {
                    "CPUCredits": "standard"
                }
            }
        },
        "CloudFrontCachePolicy0083da9c7e98b44e11a16804f0df8e2c6500HP61h": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Policy for origins that return Cache-Control headers. Query strings are not included in the cache key.",
                    "MinTTL": 0,
                    "MaxTTL": 31536000,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        },
                        "EnableAcceptEncodingBrotli": true,
                        "HeadersConfig": {
                            "HeaderBehavior": "whitelist",
                            "Headers": [
                                "x-method-override",
                                "origin",
                                "host",
                                "x-http-method",
                                "x-http-method-override"
                            ]
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "all"
                        },
                        "EnableAcceptEncodingGzip": true
                    },
                    "DefaultTTL": 0,
                    "Name": "UseOriginCacheControlHeaders"
                }
            }
        },
        "MemoryDBUser00default00vcfr7": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::MemoryDB::User",
            "DeletionPolicy": "Retain",
            "Properties": {
                "Tags": [],
                "UserName": "default"
            }
        },
        "CloudFrontCachePolicy004135ea2d6df844a39df34b5a84be39ad00wORqX": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::CloudFront::CachePolicy",
            "DeletionPolicy": "Retain",
            "Properties": {
                "CachePolicyConfig": {
                    "Comment": "Policy with caching disabled",
                    "MinTTL": 0,
                    "MaxTTL": 0,
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        },
                        "EnableAcceptEncodingBrotli": false,
                        "HeadersConfig": {
                            "HeaderBehavior": "none"
                        },
                        "CookiesConfig": {
                            "CookieBehavior": "none"
                        },
                        "EnableAcceptEncodingGzip": false
                    },
                    "DefaultTTL": 0,
                    "Name": "Managed-CachingDisabled"
                }
            }
        },
        "EC2NetworkInterfaceAttachment00eniattach00bc7e5e4c248fdf400km9Xu": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::NetworkInterfaceAttachment",
            "DeletionPolicy": "Retain",
            "Properties": {
                "NetworkInterfaceId": "eni-0709d8dff8cfc34e6",
                "DeviceIndex": "1",
                "DeleteOnTermination": false
            }
        },
        "EC2Route00rtb0003c1c6282f0069500ZqrXS": {
            "UpdateReplacePolicy": "Retain",
            "Type": "AWS::EC2::Route",
            "DeletionPolicy": "Retain",
            "Properties": {
                "RouteTableId": {
                    "Ref": "EC2RouteTable00rtb0003c1c6282f0069500QLWT6"
                },
                "DestinationCidrBlock": "10.0.0.0/16",
                "GatewayId": "local",
                "VpcEndpointId": "local"
            }
        }
    }
}